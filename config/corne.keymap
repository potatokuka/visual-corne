/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    tab {
      bindings = <&trans>;
      key-positions = <2 3>;
    };

    ctrl {
      bindings = <&kp LCTRL>;
      key-positions = <26 27>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 38>;
    };

    alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <39 40>;
    };

    shift {
      bindings = <&kp LSHIFT>;
      key-positions = <8 9>;
    };

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>;
    };
    screenshot: screenshot {
      compatible = "zmk,behavior-macro";
      label = "SCREENSHOT";
      #binding-cells = <0>;
      bindings = <&kp RIGHT_GUI &kp LCTRL &kp LSHIFT &kp NUMBER_4>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
  &kp TAB               &kp Q  &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O          &kp P     &kp BACKSPACE
  &kp ESC  &hm LEFT_COMMAND A  &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &hm RGUI SEMI          &kp APOS
&kp LSHFT               &kp Z  &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT       &kp FSLH  &kp LEFT_CONTROL
                                      &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2   &kp RALT
      >;
    };

    raise {
      bindings = <
   &kp GRAVE        &kp N1      &kp N2      &kp N3            &kp N4  &kp N5        &kp N6    &kp N7  &kp N8     &kp N9       &kp N0  &kp BACKSPACE
&kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE  &trans      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &screenshot  &kp BACKSLASH
      &trans        &trans      &trans      &trans            &trans  &trans    &kp C_MUTE    &trans  &trans     &trans       &trans         &trans
                                            &trans            &trans  &trans        &trans     &mo 3  &trans
      >;
    };

    lower {
      bindings = <
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BACKSPACE
&trans        &kp PLUS        &kp MINUS             &kp 0              &kp 0     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH      &kp GRAVE
&trans       &kp EQUAL   &kp UNDERSCORE            &trans             &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE      &kp TILDE
                                                   &trans              &mo 3     &trans       &trans     &trans           &trans
      >;
    };

    both {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans    &rgb_ug RGB_COLOR_HSB(0,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(120,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2      &bt BT_CLR  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(240,60,50)
                        &trans  &trans        &trans          &trans  &trans  &trans
      >;
    };
  };
};
